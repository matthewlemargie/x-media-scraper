from selenium.webdriver.common.by import By
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from bs4 import BeautifulSoup
import requests
import os
import time
from yt_dlp import YoutubeDL
import json

def truncate_title(title, max_length=50):
    return title[:max_length] if len(title) > max_length else title

def export_cookies(driver, filepath):
    cookies = driver.get_cookies()
    with open(filepath, 'w') as f:
        # Write the Netscape header
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# This file is generated by a Python script\n")
        f.write("# HttpOnly\tDOMAIN\tFLAG\tPATH\tSECURE\tEXPIRY\tNAME\tVALUE\n")
        
        for cookie in cookies:
            # Convert the cookie into Netscape-style format
            domain = cookie['domain']
            flag = "TRUE" if domain.startswith(".") else "FALSE"  # Subdomains
            path = cookie['path']
            secure = "TRUE" if cookie['secure'] else "FALSE"
            expiry = str(cookie['expiry']) if 'expiry' in cookie else "0"
            name = cookie['name']
            value = cookie['value']
            
            # Write the cookie entry
            f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expiry}\t{name}\t{value}\n")

loginfile = open("login.info", "r")
username = loginfile.readline() 
password = loginfile.readline() 
loginfile.close()

accountfile = open("accounts.info", "r")
accounts = accountfile.readlines()
accountfile.close()

imgdir = '/home/dmac/Pictures/'

try:
    while True:
        driver = webdriver.Firefox()
        cookies = driver.get_cookies()

        sitebase = "https://x.com"

        driver.get(sitebase)
        # time.sleep(4)
        i = 0
        while True:
            try: 
                driver.find_element(By.XPATH, '/html/body/div[1]/div/div/div[2]/main/div/div/div[1]/div/div/div[3]/div[4]/a').click()
                i += 1
                if i % 30 == 0:
                    driver.get(sitebase)
                break
            except:
                pass
# username
        time.sleep(4)
        while True:
            try:
                driver.find_element(By.XPATH, '/html/body/div/div/div/div[1]/div[2]/div/div/div/div/div/div[2]/div[2]/div/div/div[2]/div[2]/div/div/div/div[4]/label/div/div[2]/div/input').send_keys(username)
                driver.find_element(By.XPATH, '/html/body/div/div/div/div[1]/div[2]/div/div/div/div/div/div[2]/div[2]/div/div/div[2]/div[2]/div/div/div/button[2]/div').click()
                break
            except:
                pass

# password
        time.sleep(4)
        while True:
            try:
                driver.find_element(By.XPATH, '/html/body/div/div/div/div[1]/div[2]/div/div/div/div/div/div[2]/div[2]/div/div/div[2]/div[2]/div[1]/div/div/div[3]/div/label/div/div[2]/div[1]/input').send_keys(password)
                driver.find_element(By.XPATH, '/html/body/div/div/div/div[1]/div[2]/div/div/div/div/div/div[2]/div[2]/div/div/div[2]/div[2]/div[2]/div/div[1]/div/div/button').click()
                break
            except:
                pass
        time.sleep(4)

        for cookie in cookies:
            driver.add_cookie(cookie)

        if "logout" not in driver.current_url:
            break
        else:
            driver.close()

    cookie_file = "cookies.txt"
    export_cookies(driver, cookie_file)

    for account_url in accounts:
        account_name = account_url.split("/")[-1]
        driver.get(account_url)
        while True:
            elements = driver.find_elements(By.CSS_SELECTOR, "a.css-175oi2r.r-1awozwy.r-6koalj.r-eqz5dr.r-16y2uox.r-1h3ijdo.r-1777fci.r-s8bhmr.r-1c4vpko.r-1c7gwzm.r-o7ynqc.r-6416eg.r-1ny4l3l.r-1loqt21")
            if len(elements) < 3:
                continue
            else:
                break
        elements[-1].click()

        time.sleep(1)
        urls = set()

        while True:
            urls_len = len(urls)

            while True:
                soup = BeautifulSoup(driver.page_source, 'html.parser')
                section = soup.find("section", class_="css-175oi2r")
                try:
                    links = section.find_all("a")
                    if links is not None:
                        break
                except:
                    continue

            links = {link.get("href") for link in links if link.get("href")}

            urls.update(links)

            if len(urls) == urls_len:
                break

            # Scroll to the bottom of the page
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")

            time.sleep(2)

        accountdir = os.path.join(imgdir, account_name)
        os.makedirs(accountdir, exist_ok=True)

        options = {
            'format': 'best',
            'outtmpl': f"/home/dmac/Pictures/{account_name}/%(title)s.%(ext)s",
            'quiet': False,
            'cookiefile': cookie_file,
        }

        q = list(urls)

        for url in urls:
            if "video" in url:
                os.system(f"yt-dlp -o \"{accountdir}/%(title).50s_%(playlist_index)s.%(ext)s\" {sitebase + url} --cookies-from-browser firefox -k")

            elif "photo" in url:
                driver.get(sitebase + url)
                i = 0
                while True:
                    if i % 50 == 0:
                        driver.refresh()
                    # if i % 1000 == 0:
                        # driver.close()
                        # driver = webdriver.Firefox()
                        # for cookie in cookies:
                            # driver.add_cookie(cookie)
                        # driver.get(sitebase + url)
                        # i = 0
                    try:
                        i += 1
                        soup = BeautifulSoup(driver.page_source, 'html.parser')
                        content_section = soup.find("div", class_="css-175oi2r r-1kqtdi0 r-1phboty r-rs99b7 r-1867qdf r-1udh08x r-o7ynqc r-6416eg r-1ny4l3l")
                        images = content_section.find_all("img", class_="css-9pa8cd")
                        img_urls = {img.get("src") for img in images if img.get("src")}
                        if len(img_urls) > 0:
                            break
                    except:
                        pass
                for img_url in img_urls:
                    img = requests.get(img_url)
                    file_path = os.path.join(accountdir, img_url.split('/')[-1])
                    with open(file_path, 'wb') as f:
                        f.write(img.content)

    driver.close()
except KeyboardInterrupt:
    pass
